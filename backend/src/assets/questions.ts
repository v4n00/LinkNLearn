export const singlyLinkedListQuestions = [
	{
		quizId: 3,
		text: 'What is a singly linked list?',
		options: JSON.stringify(['A collection of nodes where each node contains data and a reference to the next node in the sequence', 'A type of array', 'A collection of nodes without any order', 'A data structure where each element is linked to the previous and next element']),
		answer: 'A collection of nodes where each node contains data and a reference to the next node in the sequence',
	},
	{
		quizId: 3,
		text: 'How do you determine if a singly linked list is circular?',
		options: JSON.stringify(['By checking if the list has a tail node', 'If it can be iterated indefinitely', 'By checking if the next reference of the last node points to the head of the list', 'If the list has no nodes']),
		answer: 'By checking if the next reference of the last node points to the head of the list',
	},
	{
		quizId: 3,
		text: 'Which of the following operations is more efficient in a singly linked list compared to an array?',
		options: JSON.stringify(['Accessing an element by index', 'Inserting or deleting an element at the beginning of the list', 'Searching for an element', 'Sorting the list']),
		answer: 'Inserting or deleting an element at the beginning of the list',
	},
	{
		quizId: 3,
		text: "What does the 'next' pointer of the last node in a non-circular singly linked list point to?",
		options: JSON.stringify(['The first node', 'Null', 'The second to last node', 'Itself']),
		answer: 'Null',
	},
	{
		quizId: 3,
		text: 'In a singly linked list, how do you find the length of the list?',
		options: JSON.stringify(['By keeping a count variable that increments on each insertion', 'By iterating through the list until you reach the end', 'By accessing the length property', 'By checking the size of the data']),
		answer: 'By iterating through the list until you reach the end',
	},
	{
		quizId: 3,
		text: 'Which of the following is a disadvantage of a singly linked list over an array?',
		options: JSON.stringify(['Higher memory usage due to storage of next pointers', 'Fixed size', 'Better cache locality', 'Faster access time']),
		answer: 'Higher memory usage due to storage of next pointers',
	},
	{
		quizId: 3,
		text: 'How can you reverse a singly linked list?',
		options: JSON.stringify(['By swapping the head and tail', 'By iterating through the list and reversing the direction of the next pointers', 'By using a stack', 'Both B and C are correct']),
		answer: 'Both B and C are correct',
	},
	{
		quizId: 3,
		text: 'What is the time complexity of inserting a new node at the beginning of a singly linked list?',
		options: JSON.stringify(['O(1)', 'O(n)', 'O(log n)', 'O(n^2)']),
		answer: 'O(1)',
	},
	{
		quizId: 3,
		text: 'What would be the first step to insert a new node after a given node in a singly linked list?',
		options: JSON.stringify(['Find the given node', 'Create a new node', 'Update the next pointer of the new node', 'Update the next pointer of the given node']),
		answer: 'Find the given node',
	},
	{
		quizId: 3,
		text: 'Which of the following is true about the deletion of a node in a singly linked list?',
		options: JSON.stringify(['You must have access to the node preceding the node to be deleted', 'You can delete a node without any reference to other nodes', 'It has a time complexity of O(1)', "You need to update the 'next' pointer of the node to be deleted"]),
		answer: 'You must have access to the node preceding the node to be deleted',
	},
	{
		quizId: 3,
		text: 'In a circular singly linked list, how is the last node recognized?',
		options: JSON.stringify(['It points to null', 'It has a special marker', 'Its next pointer points to the head of the list', "It is marked as 'end'"]),
		answer: 'Its next pointer points to the head of the list',
	},
	{
		quizId: 3,
		text: 'Which of the following operations is not a typical function of a singly linked list?',
		options: JSON.stringify(['Insertion at the end', 'Deletion from the beginning', 'Random access to an element', 'Searching for an element']),
		answer: 'Random access to an element',
	},
	{
		quizId: 3,
		text: "What does the 'tail' node in a non-circular singly linked list point to?",
		options: JSON.stringify(['The head node', 'The second to last node', 'Null', 'Itself']),
		answer: 'Null',
	},
	{
		quizId: 3,
		text: "In the context of a singly linked list, what is a 'node'?",
		options: JSON.stringify(['A function that adds elements to the list', 'A variable that stores the length of the list', 'A structure containing a data part and a link part', 'The process of linking two lists together']),
		answer: 'A structure containing a data part and a link part',
	},
	{
		quizId: 3,
		text: 'Which statement is true for a circular singly linked list?',
		options: JSON.stringify(['The head node points to null', 'It cannot have more than 10 nodes', 'The tail node points to the head node', 'It is faster than a non-circular list for inserting nodes']),
		answer: 'The tail node points to the head node',
	},
	{
		quizId: 3,
		text: 'What advantage does a singly linked list have over an array?',
		options: JSON.stringify(['Faster access times for any element', 'Lower memory overhead', 'Dynamic size', 'Better cache performance']),
		answer: 'Dynamic size',
	},
	{
		quizId: 3,
		text: 'How do you find the length of a circular singly linked list?',
		options: JSON.stringify(['By counting nodes until you reach null', 'By iterating through the list until you reach the head node again', 'By dividing the total memory size by the size of a node', 'Length cannot be determined']),
		answer: 'By iterating through the list until you reach the head node again',
	},
	{
		quizId: 3,
		text: 'What is the first step in deleting a node from a singly linked list (not the head node)?',
		options: JSON.stringify(['Set the next pointer of the previous node to null', 'Find the node immediately before the one to be deleted', 'Create a new node', 'Copy the list']),
		answer: 'Find the node immediately before the one to be deleted',
	},
	{
		quizId: 3,
		text: 'How is a singly linked list typically represented in memory?',
		options: JSON.stringify(['A series of contiguous memory blocks', 'A collection of nodes where each node has a data part and a pointer to the next node', 'A fixed-size array', 'A hash table for direct access']),
		answer: 'A collection of nodes where each node has a data part and a pointer to the next node',
	},
	{
		quizId: 3,
		text: 'Which of the following is not a characteristic of a circular singly linked list?',
		options: JSON.stringify(['It has a tail node that points to null', 'Traversal can be infinite if not careful', 'Can be used to implement queues and stacks', 'The last node points to the first node']),
		answer: 'It has a tail node that points to null',
	},
	{
		quizId: 3,
		text: 'What is the time complexity of adding a new node to the beginning of a singly linked list?',
		options: JSON.stringify(['O(1)', 'O(n)', 'O(log n)', 'O(n^2)']),
		answer: 'O(1)',
	},
	{
		quizId: 3,
		text: 'What is the time complexity of deleting the last node of a singly linked list?',
		options: JSON.stringify(['O(1)', 'O(n)', 'O(log n)', 'O(n^2)']),
		answer: 'O(n)',
	},
	{
		quizId: 3,
		text: 'What is the time complexity of searching for a value in an unsorted singly linked list?',
		options: JSON.stringify(['O(1)', 'O(n)', 'O(log n)', 'O(n^2)']),
		answer: 'O(n)',
	},
];
